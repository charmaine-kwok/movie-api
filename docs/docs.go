// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "charmaine.kwok"
        },
        "license": {
            "name": "Apache 2.0"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/login": {
            "post": {
                "description": "Login user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "JWT token",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid username or password"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/movies": {
            "get": {
                "description": "Get a list of movie information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get a list of movie information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movies Information",
                        "schema": {
                            "$ref": "#/definitions/controllers.MoviesListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user_id"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "description": "Create movie entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Create movie entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Movie details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.MovieCreatorItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Movie Information",
                        "schema": {
                            "$ref": "#/definitions/controllers.MovieItemResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/movies/{itemId}": {
            "get": {
                "description": "Get movie information by item id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Movies"
                ],
                "summary": "Get movie information by item id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "number",
                        "description": "Item id",
                        "name": "itemId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Movie Information",
                        "schema": {
                            "$ref": "#/definitions/controllers.MovieItemResponse"
                        }
                    },
                    "404": {
                        "description": "No item found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/non-movies": {
            "get": {
                "description": "Get a list of non-movie information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Non-movies"
                ],
                "summary": "Get a list of non-movie information",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Page Number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Non-Movie Information",
                        "schema": {
                            "$ref": "#/definitions/controllers.NonMoviesListResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid user_id"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "description": "Create non-movie entry",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Non-movies"
                ],
                "summary": "Create non-movie entry",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Non-Movie details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.NonMovieCreatorItem"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Non-Movie Information",
                        "schema": {
                            "$ref": "#/definitions/controllers.NonMovieItemResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/non-movies/{itemId}": {
            "get": {
                "description": "Get non-movie information by item id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Non-movies"
                ],
                "summary": "Get non-movie information by item id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Server JWT Token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Item id",
                        "name": "itemId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Non-Movie Information",
                        "schema": {
                            "$ref": "#/definitions/controllers.NonMovieItemResponse"
                        }
                    },
                    "404": {
                        "description": "No item found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/user": {
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create user",
                "parameters": [
                    {
                        "description": "User details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User created"
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.MovieCreatorItem": {
            "type": "object",
            "required": [
                "date",
                "desc",
                "location",
                "pic",
                "rating",
                "title",
                "title_zh"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "example": "dd-mm-yyyy"
                },
                "desc": {
                    "type": "string",
                    "example": "movie description"
                },
                "location": {
                    "type": "string",
                    "example": "location"
                },
                "pic": {
                    "type": "string",
                    "example": "pic url of movie"
                },
                "rating": {
                    "type": "string",
                    "example": "9.0"
                },
                "title": {
                    "type": "string",
                    "example": "title in English"
                },
                "title_zh": {
                    "type": "string",
                    "example": "title in Chinese"
                },
                "wiki_url": {
                    "type": "string",
                    "example": "wiki url of movie"
                }
            }
        },
        "controllers.MovieItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/models.Movie"
                }
            }
        },
        "controllers.MoviesListResponse": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Movie"
                    }
                },
                "totalItem": {
                    "type": "integer",
                    "example": 1
                },
                "totalPage": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "controllers.NonMovieCreatorItem": {
            "type": "object",
            "required": [
                "date",
                "desc",
                "location",
                "pic",
                "rating",
                "title"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "example": "dd-mm-yyyy"
                },
                "desc": {
                    "type": "string",
                    "example": "item description"
                },
                "location": {
                    "type": "string",
                    "example": "location"
                },
                "pic": {
                    "type": "string",
                    "example": "pic url of item"
                },
                "rating": {
                    "type": "string",
                    "example": "9.0"
                },
                "title": {
                    "type": "string",
                    "example": "title"
                }
            }
        },
        "controllers.NonMovieItemResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "$ref": "#/definitions/models.NonMovie"
                }
            }
        },
        "controllers.NonMoviesListResponse": {
            "type": "object",
            "properties": {
                "currentPage": {
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.NonMovie"
                    }
                },
                "totalItem": {
                    "type": "integer",
                    "example": 1
                },
                "totalPage": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "models.Movie": {
            "type": "object",
            "required": [
                "date",
                "desc",
                "location",
                "pic",
                "rating",
                "title",
                "title_zh"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2023-02-15T00:00:00+00"
                },
                "desc": {
                    "type": "string",
                    "example": "A very good movie."
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "location": {
                    "type": "string",
                    "example": "K11"
                },
                "pic": {
                    "type": "string",
                    "example": "https://upload.wikimedia.org/wikipedia/en/3/3b/Pulp_Fiction_%281994%29_poster.jpg"
                },
                "rating": {
                    "type": "string",
                    "example": "9.0"
                },
                "title": {
                    "type": "string",
                    "example": "黑色追緝令"
                },
                "title_zh": {
                    "type": "string",
                    "example": "Pulp Fiction"
                },
                "wiki_url": {
                    "type": "string",
                    "example": "https://en.wikipedia.org/wiki/Pulp_Fiction"
                }
            }
        },
        "models.NonMovie": {
            "type": "object",
            "required": [
                "date",
                "desc",
                "location",
                "pic",
                "rating",
                "title"
            ],
            "properties": {
                "date": {
                    "type": "string",
                    "example": "2023-02-15T00:00:00+00"
                },
                "desc": {
                    "type": "string",
                    "example": "So great to see WESTLIFE live!"
                },
                "id": {
                    "type": "integer",
                    "example": 5
                },
                "location": {
                    "type": "string",
                    "example": "ASIAWORLD-ARENA"
                },
                "pic": {
                    "type": "string",
                    "example": "https://res.klook.com/image/upload/v1670553795/sn2b41ae5zpobabcxya4.jpg"
                },
                "rating": {
                    "type": "string",
                    "example": "9.0"
                },
                "title": {
                    "type": "string",
                    "example": "Westlife The Wild Dreams Tour"
                }
            }
        },
        "models.User": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "username": {
                    "type": "string",
                    "example": "user"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0.0",
	Host:             "go-crud.fly.dev",
	BasePath:         "/api",
	Schemes:          []string{"https"},
	Title:            "Movie Api",
	Description:      "This is an API server for communication between mobile application and PostgreSQL Database.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
