basePath: /api
definitions:
  controllers.MovieInformationResponse:
    properties:
      item:
        $ref: '#/definitions/models.Movie'
    type: object
  controllers.MoviesInformationResponse:
    properties:
      currentPage:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.Movie'
        type: array
      totalItem:
        type: integer
      totalPage:
        type: integer
    type: object
  controllers.NonMovieInformationResponse:
    properties:
      item:
        $ref: '#/definitions/models.NonMovie'
    type: object
  controllers.NonMovieListInformationResponse:
    properties:
      currentPage:
        type: integer
      items:
        items:
          $ref: '#/definitions/models.NonMovie'
        type: array
      totalItem:
        type: integer
      totalPage:
        type: integer
    type: object
  models.Movie:
    properties:
      date:
        type: string
      desc:
        type: string
      location:
        type: string
      pic:
        type: string
      rating:
        type: string
      title_en:
        type: string
      title_zh:
        type: string
      wiki_url:
        type: string
    type: object
  models.NonMovie:
    properties:
      date:
        type: string
      desc:
        type: string
      location:
        type: string
      pic:
        type: string
      rating:
        type: string
      title:
        type: string
    type: object
host: go-crud.fly.dev
info:
  contact:
    name: charmaine.kwok
  description: This is an API server for communication between mobile application
    and MongoDB Database.
  license:
    name: Apache 2.0
  title: Movie Api
  version: 1.0.0
paths:
  /movies/{type}:
    get:
      consumes:
      - application/json
      description: Get a list of movie information by type
      parameters:
      - description: Type
        enum:
        - movies
        - others
        in: path
        name: type
        required: true
        type: string
      - description: Page Number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Movies Information
          schema:
            $ref: '#/definitions/controllers.MoviesInformationResponse'
        "400":
          description: Invalid type
        "500":
          description: Internal server error
      summary: Get a list of movie information by type
      tags:
      - Movies
    post:
      consumes:
      - application/json
      description: Create movie entry
      parameters:
      - description: Type
        enum:
        - movies
        - others
        in: path
        name: type
        required: true
        type: string
      - description: Chinese title
        in: formData
        name: title_zh
        required: true
        type: string
      - description: English title
        in: formData
        name: title_en
        required: true
        type: string
      - description: Description
        in: formData
        name: desc
        required: true
        type: string
      - description: Location
        in: formData
        name: location
        required: true
        type: string
      - description: Date
        in: formData
        name: date
        required: true
        type: string
      - description: Rating
        in: formData
        name: rating
        required: true
        type: string
      - description: Link og pic
        in: formData
        name: pic
        required: true
        type: string
      - description: Wiki url
        in: formData
        name: wiki_url
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Movie Information
          schema:
            $ref: '#/definitions/controllers.MovieInformationResponse'
        "400":
          description: Invalid request body
        "500":
          description: Internal server error
      summary: Create movie entry
      tags:
      - Movies
  /movies/{type}/details/{title}:
    get:
      consumes:
      - application/json
      description: Get movie information by Title
      parameters:
      - description: Type
        enum:
        - movies
        - others
        in: path
        name: type
        required: true
        type: string
      - description: Title
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Movie Information
          schema:
            $ref: '#/definitions/controllers.MovieInformationResponse'
        "400":
          description: Invalid type
        "500":
          description: Internal server error
      summary: Get movie information by Title
      tags:
      - Movies
  /non-movies:
    get:
      consumes:
      - application/json
      description: Get a list of non-movies information by type
      parameters:
      - description: Page Number
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Information
          schema:
            $ref: '#/definitions/controllers.NonMovieListInformationResponse'
        "400":
          description: Invalid type
        "500":
          description: Internal server error
      summary: Get a list of non-movies information by type
      tags:
      - Non-movies
  /non-movies/details/{title}:
    get:
      consumes:
      - application/json
      description: Get non-movie information by Title
      parameters:
      - description: Title
        in: path
        name: title
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Non-Movie Information
          schema:
            $ref: '#/definitions/controllers.NonMovieInformationResponse'
        "400":
          description: Invalid type
        "500":
          description: Internal server error
      summary: Get non-movie information by Title
      tags:
      - Non-movies
swagger: "2.0"
